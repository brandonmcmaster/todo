{"ast":null,"code":"var _jsxFileName = \"/Users/brandonmcmaster/Desktop/todo-list/todo-list/src/components/TodoForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TodoForm(props) {\n  _s();\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\n  const inputRef = useRef(null);\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input\n    });\n    setInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"todo-form\",\n    onSubmit: handleSubmit,\n    children: props.edit ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Update your item\",\n        value: input,\n        name: \"text\",\n        className: \"todo-input\",\n        onChange: handleChange,\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"todo-button\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add a todo\",\n        value: input,\n        name: \"text\",\n        className: \"todo-input\",\n        onChange: handleChange,\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"todo-button\",\n        children: \"Add todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 4\n  }, this);\n}\n_s(TodoForm, \"xbvrlj5lrJII/vsr6NCUo81spDI=\");\n_c = TodoForm;\nexport default TodoForm;\nvar _c;\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","TodoForm","props","_s","input","setInput","edit","value","inputRef","current","focus","handleChange","e","target","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","text","className","children","type","placeholder","name","onChange","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/brandonmcmaster/Desktop/todo-list/todo-list/src/components/TodoForm.js"],"sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\n\nfunction TodoForm(props) {\nconst [input, setInput] = useState(props.edit ? props.edit.value : '')\n\nconst inputRef = useRef(null)\n\nuseEffect(() => {\n    inputRef.current.focus()\n});\n\nconst handleChange = e => {\n    setInput(e.target.value);\n}\nconst handleSubmit = e => {\n    e.preventDefault();\n\n    props.onSubmit({\n        id: Math.floor(Math.random() * 10000),\n        text: input\n    });\n\n    setInput('');\n};\n\n  return (\n   <form className=\"todo-form\" onSubmit={handleSubmit}>\n    {props.edit ? (  \n    <>\n    <input \n    type=\"text\"   \n    placeholder=\"Update your item\" \n    value={input} \n    name=\"text\" \n    className=\"todo-input\" \n    onChange={handleChange}\n    ref={inputRef}\n    />\n    <button className=\"todo-button\">Update</button>\n    </>\n    ) :\n    (  \n    <>\n    <input \n        type=\"text\"   \n        placeholder=\"Add a todo\" \n        value={input} \n        name=\"text\" \n        className=\"todo-input\" \n        onChange={handleChange}\n        ref={inputRef}\n        />\n        <button className=\"todo-button\">Add todo</button>\n        </>\n        )\n    }\n  \n   </form>\n  )\n}\n\nexport default TodoForm"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExD,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACzB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAACQ,KAAK,CAACI,IAAI,GAAGJ,KAAK,CAACI,IAAI,CAACC,KAAK,GAAG,EAAE,CAAC;EAEtE,MAAMC,QAAQ,GAAGZ,MAAM,CAAC,IAAI,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACZa,QAAQ,CAACC,OAAO,CAACC,KAAK,CAAC,CAAC;EAC5B,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAGC,CAAC,IAAI;IACtBP,QAAQ,CAACO,CAAC,CAACC,MAAM,CAACN,KAAK,CAAC;EAC5B,CAAC;EACD,MAAMO,YAAY,GAAGF,CAAC,IAAI;IACtBA,CAAC,CAACG,cAAc,CAAC,CAAC;IAElBb,KAAK,CAACc,QAAQ,CAAC;MACXC,EAAE,EAAEC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,KAAK,CAAC;MACrCC,IAAI,EAAEjB;IACV,CAAC,CAAC;IAEFC,QAAQ,CAAC,EAAE,CAAC;EAChB,CAAC;EAEC,oBACCP,OAAA;IAAMwB,SAAS,EAAC,WAAW;IAACN,QAAQ,EAAEF,YAAa;IAAAS,QAAA,EACjDrB,KAAK,CAACI,IAAI,gBACXR,OAAA,CAAAE,SAAA;MAAAuB,QAAA,gBACAzB,OAAA;QACA0B,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,kBAAkB;QAC9BlB,KAAK,EAAEH,KAAM;QACbsB,IAAI,EAAC,MAAM;QACXJ,SAAS,EAAC,YAAY;QACtBK,QAAQ,EAAEhB,YAAa;QACvBiB,GAAG,EAAEpB;MAAS;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CAAC,eACFlC,OAAA;QAAQwB,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAAM;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eAC7C,CAAC,gBAGHlC,OAAA,CAAAE,SAAA;MAAAuB,QAAA,gBACAzB,OAAA;QACI0B,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,YAAY;QACxBlB,KAAK,EAAEH,KAAM;QACbsB,IAAI,EAAC,MAAM;QACXJ,SAAS,EAAC,YAAY;QACtBK,QAAQ,EAAEhB,YAAa;QACvBiB,GAAG,EAAEpB;MAAS;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CAAC,eACFlC,OAAA;QAAQwB,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAAQ;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eAC/C;EACD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGA,CAAC;AAEV;AAAC7B,EAAA,CAzDQF,QAAQ;AAAAgC,EAAA,GAARhC,QAAQ;AA2DjB,eAAeA,QAAQ;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}